// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { BoxSizing } from "./BoxSizing";
import type { Color } from "./Color";
import type { FontFamily } from "./FontFamily";
import type { FontFeatureSettings } from "./FontFeatureSettings";
import type { FontStyle } from "./FontStyle";
import type { FontVariationSettings } from "./FontVariationSettings";
import type { FontWeight } from "./FontWeight";
import type { ImageScalingAlgorithm } from "./ImageScalingAlgorithm";
import type { LengthUnit } from "./LengthUnit";
import type { LineHeight } from "./LineHeight";
import type { OverflowWrap } from "./OverflowWrap";
import type { TextAlign } from "./TextAlign";
import type { TextOverflow } from "./TextOverflow";
import type { TextTransform } from "./TextTransform";
import type { WordBreak } from "./WordBreak";

/**
 * Style properties that can be inherited by child elements.
 */
export type InheritableStyle = { 
/**
 * How the width and height of an element are calculated.
 */
boxSizing?: BoxSizing, 
/**
 * How text should be overflowed.
 */
textOverflow?: TextOverflow, 
/**
 * Controls text case transformation when rendering.
 */
textTransform?: TextTransform, 
/**
 * Font slant style (normal, italic, oblique).
 */
fontStyle?: FontStyle, 
/**
 * Color of the element's border.
 */
borderColor?: Color, 
/**
 * Text color for child text elements.
 */
color?: Color, 
/**
 * Font size for text rendering.
 */
fontSize?: LengthUnit, 
/**
 * Font family name for text rendering.
 */
fontFamily?: FontFamily, 
/**
 * Line height for text spacing, number is em.
 */
lineHeight?: LineHeight, 
/**
 * Font weight for text rendering.
 */
fontWeight?: FontWeight, 
/**
 * Controls variable font axis values via CSS font-variation-settings property.
 */
fontVariationSettings?: FontVariationSettings, 
/**
 * Controls OpenType font features via CSS font-feature-settings property.
 */
fontFeatureSettings?: FontFeatureSettings, 
/**
 * Maximum number of lines for text before truncation.
 */
lineClamp?: number, 
/**
 * Text alignment within the element.
 */
textAlign?: TextAlign, 
/**
 * Additional spacing between characters in text.
 */
letterSpacing?: LengthUnit, 
/**
 * Additional spacing between words in text.
 */
wordSpacing?: LengthUnit, 
/**
 * Controls how images are scaled when rendered.
 */
imageRendering?: ImageScalingAlgorithm, 
/**
 * How text should be overflowed.
 */
overflowWrap?: OverflowWrap, 
/**
 * How text should be broken at word boundaries.
 */
wordBreak?: WordBreak, };
